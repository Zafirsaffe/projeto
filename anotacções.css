html  { o "alt" do "<img>" serve para quando o servidor não encontrar a imagem ou quando uma
pessoa pessoa com necessidade visual não consegue ver a imagem o jeito que eu
descreveria ou quando o google não consgue identificar essa imagem, quais
palavras você usaria para descreve-la

 reassistir a aula Display none inline e block e alinhamento de elementos inline para entender melhor 
elemenosts inline não obedecem o margin auto
 "ul" é onde se cria listas não ordenada
target="_blank serve para quando a pessoa clicar no link não sair da página e sim abrir outra guia"


Para alinhar um display block é com:
margin: auto

Para alinhar display flex é?
align-items: center;
  justify-content: center;
  
Para alinhar texto:
text-align: center;
}

JS {

Toda linguagem é escrita com esses dois principios 

* iNSTRUÇÃO (declarações)
São ordens ao computador 

*SINTAXE
Maneira correta de escrever o codigo


 
 
  
       
  Sempre que estiver no codigo 
  ""
  ''
  voce esta deinindo string (textos) que é o tipo de dado 




 temos uma variavel constante 
 ex:
const serHumano = true;
serHumano = false ( vai dar erro por você não poder mudar ou reeatribuir um valor a esse codigo, por ser constante)

* Dado booleano so pode sere verdadeiro ou falso*




    *FUNÇÕES  

    * Agrupamento de código


* Reuso de código

* Mini programas dentro do programa maiior


* Toda linguagem oferece muitas opções

EX: 
alert(2+2)




     OBJETO
     
     *Tudo é objeto
    
     *Atributos
       São as propridades de um objeto

     *Métodos
       São as funcionalidade de um objeto



}


GIT HUB{

    Git 

    * Controle de versão
       Histórico do projeto 
    
    * linha do tempo

 
      CONCEITOS BÁSICOS

    * Repository 
      local onde ficará o histórico do seu projeto  
   
    * Branch 
      linha do tempo 

    * commit 
      pontos na história 

    * Stage 
      preparação do que será enviado  para o ponto na 
      história 
  

      COMANDOS 
      
    * git init 
       inicia o git (repositório) no seu projeto  
   
    * git add . 
      adciona todos os arquivos modificados, ao stage 

    * git commit -m "messagem here"
       cria  e descreve um ponto na história 

    * git push 
       envia alterações para o repositório remoto







}


